{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/Gif.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","Form","onSubmit","event","preventDefault","trim","length","Group","controlId","Control","type","value","onChange","target","placeholder","autoComplete","apiKey","mainUrl","getGifs","category","a","limit","url","encodeURI","fetch","response","json","data","gifs","map","id","title","images","fixed_height","Gif","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","role","Row","gif","Col","md","GifApp","categories","Container","newCategory","ReactDOM","render","document","getElementById"],"mappings":"+LA4BeA,EAxBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAErB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KASA,OACE,cAACC,EAAA,EAAD,CAAMC,SARa,SAACC,GACpBA,EAAMC,iBACFL,EAAWM,OAAOC,OALF,IAMlBT,EAAcE,GACdC,EAAc,MAIhB,SACE,cAACC,EAAA,EAAKM,MAAN,CAAYC,UAAU,iBAAtB,SACE,cAACP,EAAA,EAAKQ,QAAN,CAAcC,KAAK,OAAOC,MAAOZ,EAAYa,SAXzB,SAACT,GAAD,OAAWH,EAAcG,EAAMU,OAAOF,QAWgBG,YAAY,iBAAiBC,aAAa,a,iCClBtHC,EAAS,mCACTC,EAAU,uCACHC,EAAO,uCAAG,WAAOC,GAAP,qCAAAC,EAAA,6DAAiBC,EAAjB,+BAAyB,GACxCC,EADe,UACNL,EADM,cACOM,UAAUJ,GADjB,kBACoCE,EADpC,oBACqDL,GADrD,SAEEQ,MAAMF,GAFR,cAEfG,EAFe,gBAGEA,EAASC,OAHX,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAClC,MAAO,CAAEF,GAAIA,EAAIC,MAAOA,EAAOT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,aAAaX,QALtC,kBAOdM,GAPc,4CAAH,sD,gBCFPM,EAAM,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAC3B,OACE,sBAAKa,UAAU,aAAf,UACE,qBAAKA,UAAU,uBAAuBC,IAAKd,EAAKe,IAAKN,IACrD,uBACA,mBAAGI,UAAU,kBAAb,SAAgCJ,QCFzBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECD0B,SAACA,GAC3B,MAA0BrB,mBAAS,CACjC6B,KAAM,GACNY,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OAFAC,qBAAU,kBAAMxB,EAAQC,GAAUwB,MAAK,SAACf,GAAD,OAAUa,EAAS,CAAEd,KAAMC,EAAMW,SAAS,SAAW,CAACpB,IAEtFqB,EDN2BI,CAAazB,GAAjCa,EAAd,EAAQL,KAAcY,EAAtB,EAAsBA,QACtB,OACE,qCACE,oBAAIJ,UAAU,YAAd,SAA2BhB,IAC1BoB,EACC,sBAAKJ,UAAU,mCAAf,UACE,qBAAKA,UAAU,gCAAf,SACE,qBAAKA,UAAU,iBAAiBU,KAAK,SAArC,SACE,sBAAMV,UAAU,UAAhB,4BAGJ,mBAAGA,UAAU,cAAb,2BAGF,cAACW,EAAA,EAAD,CAAKX,UAAU,oCAAf,SACGH,EAAOH,KAAI,SAACkB,GAAD,OACV,cAACC,EAAA,EAAD,CAAkBC,GAAI,EAAtB,SACE,cAAC,EAAD,eAASF,KADDA,EAAIjB,a,QEMXoB,EArBA,WACb,MAAoCpD,mBAAS,CAAC,qBAA9C,mBAAOqD,EAAP,KAAmBtD,EAAnB,KAIA,OACE,mCACE,eAACuD,EAAA,EAAD,WACE,oBAAIjB,UAAU,oBAAd,oBACA,cAAC,EAAD,CAAatC,cAPD,SAACwD,GACjBxD,EAAc,CAACwD,GAAF,mBAAkBF,QAO1BA,EAAWtB,KAAI,SAACV,GAAD,OACd,gCACE,cAAC,EAAD,CAASA,SAAUA,IACnB,oBAAIgB,UAAU,UAFNhB,Y,YCTpBmC,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,W","file":"static/js/main.c19dca30.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const maxCharacters = 2;\r\n  const [inputValue, setInputValue] = useState('');\r\n  const handleInputChange = (event) => setInputValue(event.target.value);\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (inputValue.trim().length > maxCharacters) {\r\n      setCategories(inputValue);\r\n      setInputValue('');\r\n    }\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Control type=\"text\" value={inputValue} onChange={handleInputChange} placeholder=\"Search GIFs...\" autoComplete=\"off\" />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","const apiKey = '1SPbygaro4cf31qOcsmmExHLIVl10MLX';\r\nconst mainUrl = 'https://api.giphy.com/v1/gifs/search';\r\nexport const getGifs = async (category, limit = 10) => {\r\n  const url = `${mainUrl}?q=${encodeURI(category)}&limit=${limit}&api_key=${apiKey}`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n  const gifs = data.map(({ id, title, images }) => {\r\n    return { id: id, title: title, url: images?.fixed_height.url };\r\n  });\r\n  return gifs;\r\n};\r\n","export const Gif = ({ title, url }) => {\r\n  return (\r\n    <div className=\"border m-2\">\r\n      <img className=\"img-fluid img-center\" src={url} alt={title}></img>\r\n      <hr />\r\n      <p className=\"text-center p-1\">{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Gif } from './Gif';\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  return (\r\n    <>\r\n      <h3 className=\"text-info\">{category}</h3>\r\n      {loading ? (\r\n        <div className=\"animate__animated animate__flash\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-center\">Loading...</p>\r\n        </div>\r\n      ) : (\r\n        <Row className=\"animate__animated animate__fadeIn\">\r\n          {images.map((gif) => (\r\n            <Col key={gif.id} md={4}>\r\n              <Gif {...gif} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => getGifs(category).then((gifs) => setState({ data: gifs, loading: false })), [category]);\r\n\r\n  return state;\r\n};\r\n","import { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nconst GifApp = () => {\r\n  const [categories, setCategories] = useState(['Kimetsu no Yaiba']);\r\n  const handleAdd = (newCategory) => {\r\n    setCategories([newCategory, ...categories]);\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1 className=\"text-primary mb-3\">GifApp</h1>\r\n        <AddCategory setCategories={handleAdd} />\r\n        {categories.map((category) => (\r\n          <div key={category}>\r\n            <GifGrid category={category} />\r\n            <hr className=\"m-5\"></hr>\r\n          </div>\r\n        ))}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifApp from './GifApp';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\n\nReactDOM.render(<GifApp />, document.getElementById('root'));\n"],"sourceRoot":""}